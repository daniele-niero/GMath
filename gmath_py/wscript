import os, sys

from waflib import Logs

APPNAME = '_gmath.py'
VERSION = '2.0'

top = '.'
out = 'build'


def options(ctx):
    ctx.load('compiler_cxx')
    gr=ctx.add_option_group("Maya Configuration options")
    gr.add_option("--with-maya", 
                   default=False,  
                   help='Set if you want to build gmath for Maya and link it against mayapy (Maya\'s python). ' 
                        'If false, the following options will not be taken in consideration. '
                        'Also note that choosing Maya, the python options will be overridden to link against mayapy. '
                        '[default: %default]')
    ctx.load('maya', tooldir=r'../wafTools')
    ctx.load('python', tooldir=r'../wafTools')

def configure(ctx):
    ctx.load('compiler_cxx')
    if ctx.options.with_maya:
        ctx.load('maya', tooldir=r'../wafTools')
    else:
        ctx.load('python', tooldir=r'../wafTools')
    if sys.platform=="win32":
        ctx.env.cxxshlib_PATTERN = '%s.pyd'
    elif sys.platform=='darwin':
        ctx.env.cxxshlib_PATTERN = '%s.so'
        

def build(ctx):
    swig_build = ctx(rule='swig -c++ -python -modern -DMAYA -I../../include -outdir . -outcurrentdir ${SRC}', source='gmRoot.i', name='swig')

    ctx.shlib(
        source = ctx.path.find_node("../source").ant_glob("*.cpp")+ctx.path.find_node("./build").ant_glob("*.cxx"), 
        target = '_gmath',

        includes = ["../include", ctx.env['MAYA_PYTHON_INCLUDE']],

        lib = 'python2.7',
        libpath = ctx.env['MAYA_PYTHON_LIB'],

        use='swig'
        )